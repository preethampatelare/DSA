class Solution {
    public static ArrayList<Integer> maxMeetings(int n, int[] s, int[] f) {
        // declare a 2D array n*3 size which stores 0th column with index an 1st with s[i] and 1nd with f[i]
        int arr[][]=new int[n][3];
        for(int i=0;i<n;i++){
            arr[i][0]=i;
            arr[i][1]=s[i];
            arr[i][2]=f[i];
        }
        Arrays.sort(arr,Comparator.comparingDouble(o ->o[2]));
        ArrayList<Integer> list = new ArrayList<>();
        list.add(arr[0][0]+1);
        //int count =1;
        int prevLast=arr[0][2];
        for(int i=1;i<n;i++){
            int currStart = arr[i][1];
            int currLast = arr[i][2];
            if(currStart>prevLast){
                list.add(arr[i][0]+1);
                prevLast = currLast;
            }
        }
        Collections.sort(list);
        return list;
    }
}
