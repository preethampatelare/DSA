class Solution
{
    //Function to find the maximum profit and the number of jobs done.
    int[] JobScheduling(Job arr[], int n)
    {
        Arrays.sort(arr,Comparator.comparingInt(c->c.profit));
        reverse(arr);
        int ans =0;
        int count=0;
        HashSet<Integer> set = new HashSet<>();
        for(Job j:arr){
            int deadLine = j.deadline;
            if(!set.contains(deadLine)){
                set.add(deadLine);
                count++;
                ans+=j.profit;
            }
            else{
                while(deadLine>=1){
                    if(!set.contains(deadLine)){
                        set.add(deadLine);
                        count++;
                        ans+=j.profit;
                        break;
                    }
                    deadLine--;
                }
            }
        }
        int ar[]={count,ans};
        return ar;
    }
    static void reverse(Job arr[]){
        int i=0;
        int j = arr.length-1;
        while(i<j){
            Job temp = arr[i];
            arr[i]=arr[j];
            arr[j]=temp;
            i++;
            j--;
        }
    }
}
